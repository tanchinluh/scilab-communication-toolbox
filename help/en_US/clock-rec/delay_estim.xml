<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from delay_estim.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="delay_estim" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>delay_estim</refname>
    <refpurpose>Accurate fractionnal delay estimation between two signals</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   dt = delay_estim(x0, x1)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>x0:</term>
      <listitem><para> first signal</para></listitem></varlistentry>
   <varlistentry><term>x1:</term>
      <listitem><para> second signal</para></listitem></varlistentry>
   <varlistentry><term>dt:</term>
      <listitem><para> fractionnal delay, in samples</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
This function will try to estimate accurately the delay between two signals (sub-sample accuracy). The method consists in (see detail in the reference below): (1) standard coarse delay estimation (based on the correlation of the two signals), (2) line fitting of the residual phase (in the frequency domain) after coarse alignment of the 2 signals.
   </para>
   <para>
<refsection><title>Example</title></refsection>
<programlisting>
// Test function
function x = f(t)
x = sin(2*%pi*t*10);
endfunction
;
fs  = 1000;         // Sampling rate
delay = 0.4;        // Delay between the 2 signals, in samples
t = (0:(1/fs):1)';  // Time vector
x1 = f(t);          // Signal n°=1
x2 = f(t-delay/fs); // Signal n°=2, delayed by 0.4 sample
;
// Test delay estimation
d = delay_estim(x1,x2);
printf("True delay = %f, detected delay = %f.\nError = %e.\n", delay, d, d - delay);
</programlisting>
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="frac_delay">frac_delay</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Bibliography</title>
   <para><emphasis>Subsample time delay estimations based on weighted straight line fitting to cross-spectrum phase</emphasis>, Y. BAI, 2010, <ulink url="http://www.tech-ex.com/article_images3/7/484637/34.pdf">http://www.tech-ex.com/article_images3/7/484637/34.pdf</ulink></para>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>J.A., full documentation available on <ulink url="http://www.tsdconseil.fr/log/sct">http://www.tsdconseil.fr/log/sct</ulink></member>
   </simplelist>
</refsection>
</refentry>

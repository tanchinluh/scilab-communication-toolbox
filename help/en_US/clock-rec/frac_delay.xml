<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from frac_delay.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="frac_delay" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>frac_delay</refname>
    <refpurpose>Fractionnal (sub-sample accuracy) delaying of a signal</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   y = frac_delay(x, delay)
   y = frac_delay(x, delay, method = 'itrp' | 'dft')
   y = frac_delay(x, delay, itrp)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>x:</term>
      <listitem><para> Input signal</para></listitem></varlistentry>
   <varlistentry><term>delay:</term>
      <listitem><para> Delay to apply (expressed in samples, not necessarily an integer)</para></listitem></varlistentry>
   <varlistentry><term>method:</term>
      <listitem><para> Specify the method to use: interpolator based ('itrp', default method) or DFT based ('dft')</para></listitem></varlistentry>
   <varlistentry><term>itrp:</term>
      <listitem><para> Interpolator object (see <link linkend="itrp_init">itrp_init</link>)</para></listitem></varlistentry>
   <varlistentry><term>y:</term>
      <listitem><para> Output signal, delayed version of x</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
The <emphasis role="bold">DFT method</emphasis> is based on the fact that a delay in the time domain is the same as a
modulation in the frequency domain:
   </para>
   <para>
<latex>$$x(t+\tau)\Leftrightarrow X(k)\cdot e^{-\mathbf{i}2\pi\tau \frac{k}{N}}$$</latex>
   </para>
   <para>
However, since it is based on the DFT, if the input signal is not periodic, leakages related side effects can occur (see comparison below).
   </para>
   <para>
The <emphasis role="bold">interpolator method</emphasis> is based on a cubic cardinal spline interpolator.
   </para>
   <para>
<refsection><title>Example</title></refsection>
<programlisting>
t = (0:1/20:1)';
x = sin(4*%pi*t);
y = frac_delay(x, 0.5); // Delay by 1/2 sample
clf(); plot([x y]);
</programlisting>
<mediaobject><imageobject><imagedata fileref="ex_frac_delay.png" format="PNG"/></imageobject><caption><para>Example of fractionnal delay</para></caption></mediaobject>
   </para>
   <para>
<refsection><title>Comparison of the two available methods</title></refsection>
<mediaobject><imageobject><imagedata fileref="ex_frac_delay_comp.png" format="PNG"/></imageobject><caption><para>Comparison between DFT and interpolator based fractionnal delay</para></caption></mediaobject>
<para>As one can see, the DFT method has some ringing at the end of the signal ; this is due to spectral leakages introduced by the fact that the signal values are different at the begin and at the end (the DFT suppose that the signal is peridic).</para>
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="delay_estim">delay_estim</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>J.A., full documentation available on <ulink url="http://www.tsdconseil.fr/log/sct">http://www.tsdconseil.fr/log/sct</ulink></member>
   </simplelist>
</refsection>
</refentry>

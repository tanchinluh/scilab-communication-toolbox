<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from resample.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="resample" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>resample</refname>
    <refpurpose>Resampling at a different frequency</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   y = resample(x,R);
   y = resample(x,R,itrp);
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>x:</term>
      <listitem><para> Input signal (1d vector)</para></listitem></varlistentry>
   <varlistentry><term>R:</term>
      <listitem><para> Decimation (R &lt; 1) / upsampling (R &gt; 1) factor, e.g. ratio between the output and input sample frequency.</para></listitem></varlistentry>
   <varlistentry><term>itrp:</term>
      <listitem><para> Interpolator object (default is cardinal spline)</para></listitem></varlistentry>
   <varlistentry><term>y:</term>
      <listitem><para> Output signal, resampled at input frequency * R</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
Time-domain based alternative to native Scilab <link linkend="intdec">intdec</link> function (which is DFT based).
The advantages compared to the <varname>intdec</varname> function are:
<itemizedlist>
<listitem><para>No spectral leakages effects due to different values at the beginning and end of the signal,</para></listitem>
<listitem><para>Better mastering of the frequency response (aliasing rejection), contrary to DFT method.</para></listitem>
<listitem><para>The possibility to choose the interpolation algorithm to use (currently supported: cardinal cubic splines, linear and lagrange).</para></listitem>
</itemizedlist>
   </para>
   <para>
The default implementation is based on the cardinal cubic spline interpolator.
   </para>
   <para>
<refsection><title>Example</title></refsection>
<programlisting>
fs1 = 10; fs2 = 100; // Input and output sample rates
t1 = (0:1/fs1:1)';
t2 = (0:1/fs2:1)';
x = t1; // Signal to interpolate
// Interpolation (intdec VS resample)
yi = intdec(x, fs2/fs1);
yr = resample(x, fs2/fs1);
// Trunk the end of interpolated signals
yi = yi(1:length(t2)); yr = yr(1:length(t2));
// Plotting
clf(); plot(t1,x,'sb'); plot(t2,yi,'r'); plot(t2,yr,'g');
legend(['1:n';'intdec(1:n,8)';'resample(1:n,8)']);
</programlisting>
<mediaobject><imageobject><imagedata fileref="ex_resample.png" format="PNG"/></imageobject><caption><para>Comparison between intdec (DFT based) aand resample (interpolator based)</para></caption></mediaobject>
   </para>
   <para>
Note the importance of the leakage effects in intdec function, due to the hypothesis of periodicity (introducing a big discontinuity between the end and the begin of the signal).
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="intdec">intdec</link></member>
   <member><link linkend="itrp_init">itrp_init</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>J.A., full documentation available on <ulink url="http://www.tsdconseil.fr/log/sct">http://www.tsdconseil.fr/log/sct</ulink></member>
   </simplelist>
</refsection>
</refentry>

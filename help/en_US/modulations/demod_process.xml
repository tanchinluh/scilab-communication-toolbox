<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from demod_process.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="demod_process" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>demod_process</refname>
    <refpurpose>Complete demodulation chain implementation (from a RF or IF signal to a binary sequence).</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   [demod,b] = demod_process(demod,x);
   [demod,b,y] = demod_process(demod,x);
   [demod,b,y,dbg] = demod_process(demod,x);
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>demod:</term>
      <listitem><para> Demodulation object (can be created with the function <link linkend="demod_init">demod_init</link>)</para></listitem></varlistentry>
   <varlistentry><term>x:</term>
      <listitem><para> Input RF or IF signal</para></listitem></varlistentry>
   <varlistentry><term>b:</term>
      <listitem><para> Decoded binary sequence (hard-decoding)</para></listitem></varlistentry>
   <varlistentry><term>y:</term>
      <listitem><para> Decoded symbols, which can be used for soft-decoding (optionnal output parameter)</para></listitem></varlistentry>
   <varlistentry><term>dbg:</term>
      <listitem><para> Debug structure, containing the intermediate results of the demodulation process  (optionnal output parameter)</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
Proceed to demodulation of the input signal.
The demodulation consists in the following steps:
<orderedlist>
<listitem><para><emphasis role="bold">Downconversion to baseband</emphasis> (if the configured intermediate frequency is not null), including image frequency filtering.</para></listitem>
<listitem><para><emphasis role="bold">Carrier recovery:</emphasis> detection and removing of carrier offset and residual frequency shift (with phase detector automatically choosen according to the currently used modulation scheme, and a second order loop)</para></listitem>
<listitem><para><emphasis role="bold">Matched filtering:</emphasis> filter matched to the pulse shaping filter (e.g. moving average for NRZ, or RC/SRRC filter for RC/SRRC pulses, etc.)</para></listitem>
<listitem><para><emphasis role="bold">Clock recovery:</emphasis> using an interpolator and a timing error detector automatically choosen according to  the modulation being used.</para></listitem>
<listitem><para><emphasis role="bold">Symbol demapping:</emphasis> conversion of the symbol sequence to a binary sequence using hard decoding (this step may not be used in the case of soft-decoding after the demodulation stage).</para></listitem>
</orderedlist>
   </para>
   <para>
In case of frequency modulation (FSK, MSK, ...),
   </para>
   <para>
<refsection><title>Example</title></refsection>
<programlisting>
// QPSK demodulator (NRZ matched filter),
// sampling frequency = 1 MHz, IF = 200 KHz, FSYMB = 20 KHz
demod = demod_init('qpsk', 1e6, 200e3, 20e3);
//
// Create a modulator to simulate RF signal
mod = mod_init('qpsk', 1e6, 200e3, 20e3);
b1 = prbs(100); // Random bit vector
[mod,x] = mod_process(mod,b1);
//
// Proceed to demodulation
[demod,b2] = demod_process(demod, x);
//
// Alignment of the two bit vectors (and phase ambiguity resolution)
[b1,b2,nerrs,ber] = cmp_bits(b1,b2,'p',demod.wf.k);
//
// Verification
if(nerrs ~= 0)
error("No noise case and error(s) are detected!");
end;
</programlisting>
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="demod_init">demod_init</link></member>
   <member><link linkend="plot_demod">plot_demod</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>J.A., full documentation available on <ulink url="http://www.tsdconseil.fr/log/sct">http://www.tsdconseil.fr/log/sct</ulink></member>
   </simplelist>
</refsection>
</refentry>
